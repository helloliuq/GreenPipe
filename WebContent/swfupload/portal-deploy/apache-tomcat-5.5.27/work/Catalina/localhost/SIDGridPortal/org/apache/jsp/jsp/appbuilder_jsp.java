package org.apache.jsp.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class appbuilder_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static java.util.List _jspx_dependants;

  static {
    _jspx_dependants = new java.util.ArrayList(1);
    _jspx_dependants.add("/jsp/nav.html");
  }

  public Object getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    JspFactory _jspxFactory = null;
    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;


    try {
      _jspxFactory = JspFactory.getDefaultFactory();
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("\t<head>\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=iso-8859-1\">\n");
      out.write("\t\t<title>Application Builder</title>\n");
      out.write("        \n");
      out.write("        <!-- this one needs to be removed, but I'll have to incorporate some of the styles in it first -->\n");
      out.write("\t\t<!-- <link rel=\"stylesheet\" href=\"../css/examples.css\" type=\"text/css\" media=\"screen\" charset=\"utf-8\" /> -->\n");
      out.write("        \n");
      out.write("        <link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"../css/ui.jqgrid.css\" />\n");
      out.write("        <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/jquery-ui.min.js\"></script>\n");
      out.write("        <link type=\"text/css\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/cupertino/jquery-ui.css\" rel=\"stylesheet\" />\n");
      out.write("\n");
      out.write("        <link href=\"../swfupload/css/default.css\" rel=\"stylesheet\" type=\"text/css\" />\n");
      out.write("        <script src=\"../js/grid.locale-en.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"../js/jquery.jqGrid.min.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"../js/commandLineParser.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../js/jsonrpc.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../swfupload/swfupload.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../swfupload/swfupload.cookies.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../js/swfupload.queue.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../js/fileprogress.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"../js/handlers.js\"></script>\n");
      out.write("\n");
      out.write("        \n");
      out.write("        <style>\n");
      out.write("            .cell-title {\n");
      out.write("                font-weight: bold;\n");
      out.write("            }\n");
      out.write("            .cell-effort-driven {\n");
      out.write("                text-align: center;\n");
      out.write("            }\n");
      out.write("            .dialog-target {\n");
      out.write("                cursor:pointer;\n");
      out.write("            }\n");
      out.write("            .method {\n");
      out.write("                float:left;\n");
      out.write("                width:20%;\n");
      out.write("                padding:5px;\n");
      out.write("                /* margin-left:5px; */\n");
      out.write("            }\n");
      out.write("            label {\n");
      out.write("                float:left;\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            fieldlabel {\n");
      out.write("                display:block;\n");
      out.write("                width:95%; \n");
      out.write("                color:gray;\n");
      out.write("                margin: 5px 10px 0px;\n");
      out.write("                padding: 2px;\n");
      out.write("                font-size:62%;\n");
      out.write("            }\n");
      out.write("            .parameter {\n");
      out.write("                margin: 0px 10px;\n");
      out.write("                padding: 5px;\n");
      out.write("                width:95%;\n");
      out.write("            }\n");
      out.write("            .parameter.text { \n");
      out.write("                margin-bottom:12px; \n");
      out.write("                width:95%; \n");
      out.write("                padding: 5px; \n");
      out.write("                margin:0px 10px; \n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            .progressWrapper {\n");
      out.write("                float:left;\n");
      out.write("                width:100%;\n");
      out.write("            }\n");
      out.write("            .progressCancel {\n");
      out.write("                background-image: url(\"../images/delete.gif\")\n");
      out.write("            }\n");
      out.write("            /* .ui-widget-header { padding-left:5px; padding-right:5px } */\n");
      out.write("            /* .ui-widget-content { padding:5px; } */\n");
      out.write("\n");
      out.write("            .header { text-align:center;width:250px;float:left;height:75px;margin:20px 10px;padding-top:10px;padding-bottom:10px;border:1px solid lightgray; }\n");
      out.write("            //.margin-fix { margin:0px 20px;padding:0px 20px; }\n");
      out.write("            .stepnumber { float:left; width:25px }\n");
      out.write("            \n");
      out.write("            \n");
      out.write("            \n");
      out.write("            \n");
      out.write("            \n");
      out.write("        </style>\n");
      out.write("    \n");
      out.write("        <script>\n");
      out.write("            var DefaultApplicationName='Your Application'\n");
      out.write("            var sessionID = \"");
      out.print( request.getSession().getId() );
      out.write("\";\n");
      out.write("            var pathtojsfiles = \"../js/\"\n");
      out.write("            var parameterTable;\n");
      out.write("            var action='");
      out.print( request.getParameter("action") );
      out.write("'\n");
      out.write("            var application='");
      out.print( request.getParameter("application") );
      out.write("'\n");
      out.write("            var appResponse;\n");
      out.write("\n");
      out.write("            var commandLineDialog;\n");
      out.write("            var uploadDialog;\n");
      out.write("            var uploader;\n");
      out.write("            var lastsel; \n");
      out.write("            var mode;\n");
      out.write("            var DefaultMode='commandline'\n");
      out.write("            var uploadedFiles = new Object()\n");
      out.write("            var jsonrpc;\n");
      out.write("            var swiftScript;\n");
      out.write("\n");
      out.write("            function showNotification(msg) {\n");
      out.write("                $(\"#notification #msg\").html(msg)  \n");
      out.write("                $(\"#notification\").removeClass('ui-state-error').addClass('ui-state-highlight').show()\n");
      out.write("            }\n");
      out.write("            function hideNotification() {  $(\"#notification\").fadeOut() }\n");
      out.write("            function showError(msg) {\n");
      out.write("                $(\"#notification #msg\").html(msg)\n");
      out.write("                $(\"#notification\").removeClass('ui-state-highlight').addClass('ui-state-error').show() \n");
      out.write("            }\n");
      out.write("            function hideError() {  $(\"#notification\").fadeOut() }\n");
      out.write("\n");
      out.write("            function showCommandLineDialog()\n");
      out.write("            {\n");
      out.write("                mode = 'commandline'\n");
      out.write("                commandLineDialog = $(\"#commandLineDialog\").dialog({position:[10,80],width:350,title:'Command line dialog',minHeight:100});\n");
      out.write("                $('#cmdline').focus()\n");
      out.write("            }\n");
      out.write("            function handleCommandLine() \n");
      out.write("            {\n");
      out.write("                parseCommandLine(); \n");
      out.write("                applicationNameUpdate()\n");
      out.write("                previewApplication()\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("function  MyFileQueueError(file, errorCode, message) {\n");
      out.write("    //console.log(\"my upload queue error \" + file + errorCode + message )\n");
      out.write("    var newfile = new Object();\n");
      out.write("    newfile.name = file.name;          \n");
      out.write("    newfile.size = message + \"(\" + file.size + \" bytes)\"\n");
      out.write(" //       FileUploaderTable.addRow(newfile); \n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function  MyUploadStart(file) {\n");
      out.write("    //console.log(\"my upload start \" + file )\n");
      out.write("    this.refreshCookies()\n");
      out.write("    this.uploadStart(file)\n");
      out.write("\n");
      out.write("\n");
      out.write("} \n");
      out.write("\n");
      out.write("function  MyUploadError(file, serverData) {\n");
      out.write("    //console.log(\"upload error \" + file.name + \", \" + serverData )\n");
      out.write("    var newfile = new Object();\n");
      out.write("    newfile.name = file.name;\n");
      out.write("    newfile.size = \"X\";\n");
      out.write("//          FileUploaderTable.addRow(newfile);\n");
      out.write(" }\n");
      out.write("\n");
      out.write("\n");
      out.write("function  MyUploadSuccess(file, serverData) {\n");
      out.write("    //console.log(\"upload success: \" + file.name )\n");
      out.write("    //jQuery('#filelist_placeholder').html(\"\")\n");
      out.write("    //fileUrl = serverData.substring(7)\n");
      out.write("    //uploadedFiles.push(fileUrl)\n");
      out.write("   // uploadedFiles[file.id] = fileUrl\n");
      out.write("   //return true;\n");
      out.write("   fileUrl = serverData.substring(7)\n");
      out.write("    uploadedFiles[file.id] = fileUrl\n");
      out.write("    if( file.name.match(/swift$/) ) {\n");
      out.write("        //console.log(\"You uploaded a swift file, it will be parsed\")\n");
      out.write("        //var paralist = jsonrpc.AppMgr.guessParameters(sessionID, fileUrl).list;\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("function ParseSwiftScript(url)\n");
      out.write("{\n");
      out.write("    //console.log(\"parse swift script url = \" + url )\n");
      out.write("    parts = url.split(\"/\")\n");
      out.write("    swiftScript = parts[parts.length-1];\n");
      out.write("    var paralist = jsonrpc.AppMgr.guessParameters(sessionID, url).list;\n");
      out.write("    parameterTable.clearGridData()\n");
      out.write("    loadParamToTable(paralist, parameterTable);\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function MyUploadSuccess2(file,serverData,receivedResponse) {\n");
      out.write("    try {\n");
      out.write("        //console.log(\"MyUploadSuccess2 file \" + file.name +\"|\"+serverData+\"|\"+receivedResponse)\n");
      out.write("        var progress = new FileProgress(file, this.customSettings.progressTarget);\n");
      out.write("        if (serverData.substring(0, 7) === \"FILEID:\") {\n");
      out.write("          progress.setComplete();\n");
      out.write("          progress.setStatus(\"Complete.\");\n");
      out.write("          progress.toggleCancel(true);\n");
      out.write("          // set the value of the input field\n");
      out.write("          var url = serverData.substring(7);\n");
      out.write("          //alert(url);\n");
      out.write("          //var fileInput = document.getElementById(this.customSettings.fileInputTarget);\n");
      out.write("          //fileInput.value=url;\n");
      out.write("          fileUrl = serverData.substring(7)\n");
      out.write("        //console.log(\"server data = \" + serverData )\n");
      out.write("        //console.log(\"fileUrl = \" + fileUrl )\n");
      out.write("        //console.log(\"url = \" + url )\n");
      out.write("          uploadedFiles[file.id] = fileUrl\n");
      out.write("          if( file.name.match(/swift$/) ) {\n");
      out.write("              //console.log(\"You uploaded a swift file\")\n");
      out.write("              var link = document.createElement('a');\n");
      out.write("              //link.setAttribute('href', 'mypage.htm');\n");
      out.write("              link.setAttribute('href', \"javascript:ParseSwiftScript(\\\"\"+fileUrl+\"\\\")\" );\n");
      out.write("              link.appendChild( document.createTextNode(\"Parse\") )\n");
      out.write("              progress.fileProgressElement.appendChild(link)\n");
      out.write("              //var paralist = jsonrpc.AppMgr.guessParameters(sessionID, fileUrl).list;\n");
      out.write("          } else {\n");
      out.write("              //console.log(\"Guess it wasn't a swift file\")\n");
      out.write("          }\n");
      out.write("        } else {\n");
      out.write("            //console.log(\"serverData: \" + serverData )\n");
      out.write("            progress.setStatus(\"Error.\");\n");
      out.write("            progress.toggleCancel(false);\n");
      out.write("            alert(serverData);\n");
      out.write("        }\n");
      out.write("\n");
      out.write("    } catch (ex) {\n");
      out.write("            //console.log(\"exception: \" + ex )\n");
      out.write("        this.debug(ex);\n");
      out.write("    }\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function RemoveFile(file_id) { \n");
      out.write("    delete uploadedFiles[file_id]\n");
      out.write("    jQuery(\"#\"+file_id).fadeOut()\n");
      out.write("}\n");
      out.write("\n");
      out.write("function  MyUploadComplete(file) {\n");
      out.write("    progress = document.getElementById(file.id)\n");
      out.write("    sel = \"#\" + file.id + \" .progressCancel\"\n");
      out.write("    jQuery(sel).attr(\"href\", \"javascript:RemoveFile(\\\"\"+file.id+\"\\\")\" )\n");
      out.write("\n");
      out.write("\n");
      out.write("    if( this.getFile() != null ) {\n");
      out.write("        this.startUpload()\n");
      out.write("    }\n");
      out.write("        return true\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("function MyFileQueued(file)\n");
      out.write("{\n");
      out.write("  //console.log(\"MyFileQueued:\" + file.name )\n");
      out.write("  document.getElementById('filelist_placeholder').innerHTML=\"\"\n");
      out.write("\n");
      out.write("}\n");
      out.write("\n");
      out.write("function uploadCancel()\n");
      out.write("{\n");
      out.write("//console.log(\"upload cancel\")\n");
      out.write("}\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            function createUploader(username) \n");
      out.write("            {\n");
      out.write("   var upload = new SWFUpload({\n");
      out.write("                // Backend Settings\n");
      out.write("                upload_url: \"/SIDGridPortal/fileupload?user=\" + username,   // Relative to the SWF file (or you can use absolute paths)\n");
      out.write("                post_params: { \"ChannelID\": \"28\", \"Type\": \"Type2\", \"sw_username\":username },\n");
      out.write("\n");
      out.write("                // File Upload Settings\n");
      out.write("                file_size_limit : \"200\",   \n");
      out.write("                file_types : \"*.*\",\n");
      out.write("                file_types_description : \"All Files\",\n");
      out.write("                file_upload_limit : \"10\",\n");
      out.write("                file_queue_limit : \"0\",\n");
      out.write("                //assume_success_timeout:5,\n");
      out.write("\n");
      out.write("                // Event Handler Settings (all my handlers are in the Handler.js file)\n");
      out.write("                //file_dialog_start_handler : fileDialogStart,\n");
      out.write("                file_queued_handler : MyFileQueued,\n");
      out.write("                file_queue_error_handler : MyFileQueueError,\n");
      out.write("                file_dialog_complete_handler : fileDialogComplete,\n");
      out.write("                //upload_start_handler : uploadStart,\n");
      out.write("                upload_progress_handler : uploadProgress,\n");
      out.write("                upload_error_handler : MyUploadError,\n");
      out.write("                //upload_error_handler : uploadError,\n");
      out.write("                upload_complete_handler : MyUploadComplete,\n");
      out.write("                upload_success_handler : MyUploadSuccess2,\n");
      out.write("upload_cancel_callback : 'uploadCancel',\n");
      out.write("                // Button Settings\n");
      out.write("                button_image_url : \"../swfupload/XPButtonUploadText_61x22.png\",\n");
      out.write("                //button_text : \"Select files...\",\n");
      out.write("                button_placeholder_id : \"spanButtonPlaceholder1\",\n");
      out.write("                button_width: 75,\n");
      out.write("                button_height: 22,\n");
      out.write("\n");
      out.write("                // Flash Settings\n");
      out.write("                flash_url : \"../swfupload/swfupload.swf\",\n");
      out.write("                custom_settings : {\n");
      out.write("                    progressTarget : \"fsUploadProgress1\",\n");
      out.write("                    cancelButtonId : \"btnCancel1\",\n");
      out.write("                    currentFileId  : \"currentFileId\",\n");
      out.write("                    fileInputTarget: \"mobyle_infile\",\n");
      out.write("                },\n");
      out.write("\n");
      out.write("                // Debug Settings\n");
      out.write("                debug: false\n");
      out.write("        });\n");
      out.write("\n");
      out.write("                return upload;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function setMode(mode_in)\n");
      out.write("            {\n");
      out.write("                mode = mode_in\n");
      out.write("                if( mode == 'swift' ) {\n");
      out.write("                    jQuery('label[for=\"command-line-radio\"]').removeClass(\"ui-state-active\") \n");
      out.write("                    jQuery('#application-command-container').hide()\n");
      out.write("                    jQuery('#command-line-container').hide()\n");
      out.write("                    jQuery('#files').fadeIn()\n");
      out.write("                }\n");
      out.write(" \n");
      out.write("                if( mode == 'commandline' ) {\n");
      out.write("                    jQuery('label[for=\"swift-radio\"]').removeClass(\"ui-state-active\") \n");
      out.write("                    jQuery('#files').hide()\n");
      out.write("                    jQuery('#application-command-container').fadeIn()\n");
      out.write("                    jQuery('#command-line-container').fadeIn()\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function showUploadForm()\n");
      out.write("            {\n");
      out.write("                mode = 'swift'\n");
      out.write("                uploader = createUploader('turam')\n");
      out.write("                uploadDialog = $(\"#uploadDialog\").dialog({position:[10,80],width:300,\n");
      out.write("                                                    title:'Upload Files',minHeight:100,\n");
      out.write("                                                    close: function() {\n");
      out.write("\n");
      out.write("                               jQuery('#upload_span_container').html(\n");
      out.write("                                ' <span id=\"fsUploadProgress1\"></span> \\\n");
      out.write("                                 <span id=\"spanButtonPlaceholder1\"></span> \\\n");
      out.write("                                  <input id=\"btnCancel1\" type=\"button\" value=\"Cancel Uploads\" onclick=\"cancelQueue(uploader);\" disabled=\"disabled\"> '); } });\n");
      out.write("            }\n");
      out.write("            function parseCommandLine() {\n");
      out.write("              cmdline = document.getElementById('cmdline').value\n");
      out.write("              parsed = parseCommandLineArgsTypesEx3(cmdline)\n");
      out.write("              cmd = parsed['cmd']\n");
      out.write("              jQuery('#application-name').val(cmd)\n");
      out.write("              jQuery('#application-command').val(cmd)\n");
      out.write("              //document.getElementById('command').value = cmd\n");
      out.write("\n");
      out.write("              arglist = parsed['list']\n");
      out.write("              parameterTable.clearGridData()\n");
      out.write("              loadParamToTable(arglist,parameterTable)\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            function applicationNameUpdate() {\n");
      out.write("                name = document.getElementById('application-name').value\n");
      out.write("                if( name === \"\" ) name = DefaultApplicationName\n");
      out.write("                jQuery('#preview-application-name').html(name)\n");
      out.write("            }\n");
      out.write("            function applicationDescriptionUpdate() {\n");
      out.write("                text = document.getElementById('application-description').value\n");
      out.write("                jQuery('#hack-preview-application-description').html(text)\n");
      out.write("            }\n");
      out.write("            function createArgFmt(ParamName, ParamType, ParamValue) {\n");
      out.write("                var argfmt = \"\";\n");
      out.write("                value = ParamValue;\n");
      out.write("                if( ! value ) value=\"value\";\n");
      out.write("                switch (ParamType) {\n");
      out.write("                    case 0:\n");
      out.write("                      argfmt = \"-\"+ParamName;\n");
      out.write("                      break;\n");
      out.write("                    case 1:\n");
      out.write("                      argfmt = value;\n");
      out.write("                      break;\n");
      out.write("                    case 2:\n");
      out.write("                      argfmt = \"-\"+ParamName+\"=\"+value;\n");
      out.write("                      break;\n");
      out.write("                    case 3:\n");
      out.write("                      argfmt = \"-\"+ParamName+\" \"+value;\n");
      out.write("                      break;\n");
      out.write("                    case 4:\n");
      out.write("                      argfmt = \"--\"+ParamName+\"=\"+value;\n");
      out.write("                      break;\n");
      out.write("                    case 5:\n");
      out.write("                      argfmt = \"--\"+ParamName+\" \"+value;\n");
      out.write("                      break;\n");
      out.write("                    case 6:\n");
      out.write("                      argfmt = \"--\"+ParamName;\n");
      out.write("                      break;\n");
      out.write("\n");
      out.write("                    }\n");
      out.write("                    //console.log(\"createArgFmt \" + ParamName + ParamType + argfmt )\n");
      out.write("                    return argfmt;\n");
      out.write("             }\n");
      out.write("            function boolToOption(b) { \n");
      out.write("                if( b==true ) return \"Yes\";\n");
      out.write("                if( b==false) return \"No\";\n");
      out.write("                return b;\n");
      out.write("            }\n");
      out.write("            function optionToBool(b) { \n");
      out.write("                if( b==\"Yes\" ) return true;\n");
      out.write("                if( b==\"No\") return false;\n");
      out.write("                return b;\n");
      out.write("            }\n");
      out.write("            function loadParamToTable(paralist, targetTable){\n");
      out.write("                for(var i=0; i<paralist.length;i++){\n");
      out.write("                    var p=paralist[i];\n");
      out.write("                    p.input = boolToOption(p.input)  \n");
      out.write("                    p.out = boolToOption(p.out)  \n");
      out.write("                    p.isStdout = boolToOption(p.isStdout)  \n");
      out.write("                    p.option = createArgFmt(p.name,p.argType,p.value)\n");
      out.write("                    newRow={ Prompt:p.prompt,Option:p.option,DataType:p.dataType,Input:p.input,Output:p.out,Stdout:p.isStdout};\n");
      out.write("                    ret = targetTable.addRowData(i, newRow );\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function makeTable() {\n");
      out.write("                 parameterTable = jQuery(\"#rowed3\").jqGrid({ \n");
      out.write("                    url:'#', \n");
      out.write("                    editurl:'#', \n");
      out.write("                    width:800,\n");
      out.write("                    height:100,\n");
      out.write("                    datatype: \"clientSide\", \n");
      out.write("                    colNames:['Prompt', 'Option','DataType','Input','Output','Stdout'], \n");
      out.write("                    colModel:[ \n");
      out.write("                    {name:'Prompt',index:'invdate', width:90, editable:true}, \n");
      out.write("                    {name:'Option',index:'name', width:100,editable:true},\n");
      out.write("                    {name:'DataType',index:'datatype', width:50,editable:true,edittype:'select',\n");
      out.write("                        editoptions:{ dataUrl:'../jsp/datatypes.html' }\n");
      out.write("                        }, \n");
      out.write("                    {name:'Input',index:'note2', width:30, sortable:false,editable:true,edittype:'checkbox'} , \n");
      out.write("                    {name:'Output',index:'note3', width:30, sortable:false,editable:true,edittype:'checkbox'} , \n");
      out.write("                    {name:'Stdout',index:'note4', width:30, sortable:false,editable:true,edittype:'checkbox'} \n");
      out.write("                    ], \n");
      out.write("                    rowNum:10, \n");
      out.write("                    //rowList:[10,20,30], \n");
      out.write("                    pager: '#prowed3', \n");
      out.write("                    sortname: 'note', \n");
      out.write("                    sortorder: \"desc\", \n");
      out.write("                    loadComplete: function(data) { //console.log(\"in loadComplete\" + data ) \n");
      out.write("                                              },\n");
      out.write("                    //afterInsertRow: function(rowid,rowdata,rowelem) { console.log(\"in afterInsertData\"); previewApplication()   },\n");
      out.write("                    serializeGridData: function(postData) { //console.log(\"in serializeGridData\"); \n");
      out.write("                                      return postData; },\n");
      out.write("                    onSelectRow: function(id){ \n");
      out.write("                        if(1 || ( id && id!==lastsel)){ \n");
      out.write("                                                jQuery(\"#rowed3\").jqGrid('restoreRow',lastsel); \n");
      out.write("                                                jQuery('#rowed3').jqGrid('editRow',id,true); \n");
      out.write("                                                lastsel=id; \n");
      out.write("                                                 } \n");
      out.write("                        }, \n");
      out.write("                    caption: \"Application Parameters\",\n");
      out.write("                    loadonce: true\n");
      out.write("                }); \n");
      out.write("                \n");
      out.write("                ret = jQuery(\"#rowed3\").addRowData(1, { Prompt:\"Example Prompt\",Option:\"--option1=value\",\"ArgType\":\"Integer\",Input:\"No\",Output:\"No\",Stdout:\"No\"}  );\n");
      out.write("                ret = jQuery(\"#rowed3\").addRowData(2, { Prompt:\"Example Prompt\",Option:\"--option2=value\",\"ArgType\":\"String\",Input:\"No\",Output:\"No\",Stdout:\"No\"}  );\n");
      out.write("                jQuery(\"#rowed3\").jqGrid('navGrid',\n");
      out.write("                     '#prowed3',\n");
      out.write("                     {edit:true,add:true,del:true,search:false,refresh:false,\n");
      out.write("                     delfunc: function(rowid) { \n");
      out.write("                                 parameterTable.delRowData(rowid)\n");
      out.write("                     }\n");
      out.write("                 \n");
      out.write("                }); \n");
      out.write("                jQuery('#prowed3_center').remove();\n");
      out.write("                jQuery('#prowed3_center').css('margin','50px');\n");
      out.write("                \n");
      out.write("                // how to programmatically select a row\n");
      out.write("                //jQuery(\"#rowed3\").setSelection( 2,true)\n");
      out.write("                \n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function showAndPreviewApplication()\n");
      out.write("            {\n");
      out.write("                previewApplication()\n");
      out.write("                jQuery('#preview-container').show()\n");
      out.write("            }\n");
      out.write("            function previewApplication()\n");
      out.write("            {\n");
      out.write("                //jQuery('#preview-container').show()\n");
      out.write("                var name = document.getElementById(\"application-name\").value;\n");
      out.write("                var command = document.getElementById(\"application-command\").value;\n");
      out.write("                \n");
      out.write("                var params = new Object();\n");
      out.write("                params.javaClass = 'java.util.List';\n");
      out.write("                params.list = [];\n");
      out.write("                rowids = parameterTable.getDataIDs()\n");
      out.write("                //console.log(\"records = \" + rowids )\n");
      out.write("                \n");
      out.write("                for(var i=0;i<rowids.length;i++)\n");
      out.write("                {\n");
      out.write("                    rowdata = parameterTable.getRowData(rowids[i]);\n");
      out.write("                    param = new Object;\n");
      out.write("                    param.javaClass = 'org.uc.sidgrid.app.AppParameter';\n");
      out.write("                    param.argpos = i\n");
      out.write("                    param.prompt = rowdata['Prompt']\n");
      out.write("                    paramobj = parseArgument2(rowdata['Option']);\n");
      out.write("                    param.name = paramobj['name']\n");
      out.write("                    param.value = paramobj['value']\n");
      out.write("                    param.argType = paramobj['argType']\n");
      out.write("                    param.dataType = rowdata['DataType']\n");
      out.write("                    param.input = optionToBool(rowdata['Input'])\n");
      out.write("                    param.out = optionToBool(rowdata['Output'])\n");
      out.write("                    param.isStdout = optionToBool(rowdata['Stdout'])\n");
      out.write("                    params.list[i] = param;\n");
      out.write("                }\n");
      out.write("                \n");
      out.write("                appResponse=jsonrpc.AppMgr.createMobyleXML(sessionID, name,command, name,params);\n");
      out.write("                jQuery('#preview-application-name').html(name);\n");
      out.write("                jQuery('#hack-preview-application-description').html(document.getElementById('application-description').value );\n");
      out.write("                jQuery.ajax({\n");
      out.write("                            url:        appResponse['gadgetURL'],\n");
      out.write("                            context:    document.body,\n");
      out.write("                            dataType: \t'text',\n");
      out.write("                            error:    function(request,textStatus,errorThrown) {\n");
      out.write("                               //console.log(\"textStatus = \" + textStatus )\n");
      out.write("                               //console.log(\"errorThrown = \" + errorThrown )\n");
      out.write("                            },\n");
      out.write("                            success:    function(data,textStatus,request) {\n");
      out.write("                                           //jQuery('#preview').html( data )\n");
      out.write("                                           document.getElementById('preview').innerHTML = data\n");
      out.write("                            }\n");
      out.write("                 })\n");
      out.write("            }\n");
      out.write("            function createCommandLineApplication() {\n");
      out.write("                var name = document.getElementById(\"application-name\").value;\n");
      out.write("                if (name==null || name==\"\"){\n");
      out.write("                    alert(\"Application Name needs to be specified\");\n");
      out.write("                    // mark the name input field\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("                var xmlfile = appResponse['mobyleXMLURL']\n");
      out.write("                var res = jsonrpc.AppMgr.uploadMobyleXML(xmlfile);\n");
      out.write("                if (res.status != 0 ) \n");
      out.write("                {\n");
      out.write("                    patt = /(cann)/g;\n");
      out.write("                    if( res.message.match(patt) ) {\n");
      out.write("                        showNotification(\"You must preview the application before it can be created.\")\n");
      out.write("                        return\n");
      out.write("                    } \n");
      out.write("                    showError(res.message);\n");
      out.write("                }\n");
      out.write("                else\n");
      out.write("                {\n");
      out.write("                    showNotification(\"Application \"+res.appName+\" created successfully.\");\n");
      out.write("                    setTimeout(\"$(window.location).attr('href','applist.jsp')\",5000)\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function createSwiftApplication() {\n");
      out.write("                var name = document.getElementById(\"application-name\").value;\n");
      out.write("                if (name==null || name==\"\"){\n");
      out.write("                    showError(\"Application Name needs to be specified\");\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // create a zipped script pkg\n");
      out.write("                var zipFile = name+\".zip\";\n");
      out.write("                var fileUrl_list = new Object();\n");
      out.write("                fileUrl_list.javaClass = \"java.util.List\";\n");
      out.write("                fileUrl_list.list = [];\n");
      out.write("                for(var i=0; i<uploadedFiles.length;i++){\n");
      out.write("                   fileUrl_list.list[i]=uploadedFiles[i];\n");
      out.write("                }\n");
      out.write("                jsonrpc.AppMgr.createScriptPkg(sessionID, fileUrl_list, zipFile);\n");
      out.write("\n");
      out.write("                // add the new script to the system\n");
      out.write("                var version = 1; //\n");
      out.write("                var mainScript = name+\".swift\";\n");
      out.write("                var xmlfile    = name+\".xml\"\n");
      out.write("                var res = jsonrpc.AppMgr.addNewScript(sessionID, name, name, version, swiftScript, xmlfile);\n");
      out.write("                if (res.status != 0 )\n");
      out.write("                    showError(res.message);\n");
      out.write("                else\n");
      out.write("                {\n");
      out.write("                    showNotification(\"Application \"+res.appName+\" created successfully.\");\n");
      out.write("                    setTimeout(\"$(window.location).attr('href','applist.jsp')\",5000)\n");
      out.write("                }\n");
      out.write("\n");
      out.write("            }\n");
      out.write("            function createApplication() {\n");
      out.write("                previewApplication()\n");
      out.write("\n");
      out.write("                if( mode ==='commandline' )\tcreateCommandLineApplication()\n");
      out.write("                else if( mode==='swift')\t\tcreateSwiftApplication()\n");
      out.write("            }\n");
      out.write("            function checkAndCreateApplication() {\n");
      out.write("                var appName = document.getElementById(\"application-name\").value;\n");
      out.write("                appInfo = jsonrpc.AppMgr.getAppInfo(appName)\n");
      out.write("                if( appInfo != null )\n");
      out.write("                {\n");
      out.write("                    msg='Replace existing application '+appName+'?'\n");
      out.write("                    $( \"#dialog-confirm\" ).attr('title',msg)\n");
      out.write("                    $( \"#dialog-confirm p\").text('This item will be overwritten and cannot be recovered. Are you sure?')\n");
      out.write("                \t$( \"#dialog-confirm\" ).dialog({\n");
      out.write("                        resizable: false,\n");
      out.write("                        width:'500px',\n");
      out.write("                        height:'auto',\n");
      out.write("                        modal: true,\n");
      out.write("                        buttons: {\n");
      out.write("                            \"Replace\": function() {\n");
      out.write("                                $( this ).dialog( \"close\" );\n");
      out.write("                                createApplication()\n");
      out.write("                            },\n");
      out.write("                            Cancel: function() {\n");
      out.write("                                $( this ).dialog( \"close\" );\n");
      out.write("                                                $(id).closest('tr').children(\"td\").toggleClass(\"ui-state-highlight\");\n");
      out.write("                            }\n");
      out.write("                        }\n");
      out.write("                    });\n");
      out.write("                }\n");
      out.write("                else {\n");
      out.write("                    // application does not exist, so just create it\n");
      out.write("                    createApplication()\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("            \n");
      out.write("            function init() {\n");
      out.write("\t            jQuery(function() {\n");
      out.write("                    jsonrpc = new JSONRpcClient(\"/SIDGridPortal/Old-JSONRPC\");\n");
      out.write("                    uploader = createUploader('turam')\n");
      out.write("                    jQuery(\"#buttonset\").buttonset();\n");
      out.write("                    jQuery(\"button\").button();\n");
      out.write("                    //jQuery(\"button\",\".buttons\").button();\n");
      out.write("                    //jQuery(\"input\",\".buttons\").button();\n");
      out.write("                    makeTable();\n");
      out.write("                    document.getElementById('application-name').value = DefaultApplicationName\n");
      out.write("                    document.getElementById('preview-application-name').innerHTML = DefaultApplicationName\n");
      out.write("                    jQuery(\"#preview-container\").hide()\n");
      out.write("                    jQuery(\"#files\").hide()\n");
      out.write("                    setMode(DefaultMode)\n");
      out.write("\n");
      out.write("                    //console.log(\"application = \" + application )\n");
      out.write("                    //console.log(\"action = \" + action )\n");
      out.write("                    if( action === \"edit\" && application ) {\n");
      out.write("                        parameterTable.clearGridData()\n");
      out.write("                        appInfo = jsonrpc.AppMgr.getAppInfo(application)['map']\n");
      out.write("                        //console.log(\"app: \" + appInfo['name'] + appInfo['command'] )\n");
      out.write("                        //console.log(\"appInfo: \" +  appInfo.toSource() )\n");
      out.write("                        jQuery('#application-name').val( appInfo['name'] )\n");
      out.write("                        jQuery('#application-command').val( appInfo['command'] )\n");
      out.write("                        appParameters = jsonrpc.AppMgr.getParameters(application)\n");
      out.write("                        //console.log(\"appParameters: \" + appParameters.toSource() )\n");
      out.write("                        loadParamToTable(appParameters.list,parameterTable);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("\n");
      out.write("\t            });\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            jQuery(window).load( init() )\n");
      out.write("            \n");
      out.write("            \n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("\t</head>\n");
      out.write("\t<body>\n");
      out.write("      ");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" media=\"screen\" href=\"../css/screen.css\" />\n");
      out.write("<link type=\"text/css\" href=\"http://ajax.googleapis.com/ajax/libs/jqueryui/1.8.2/themes/cupertino/jquery-ui.css\" rel=\"stylesheet\" />\n");
      out.write("\n");
      out.write("<style type=\"text/css\">\n");
      out.write("\n");
      out.write("#menu {\n");
      out.write("\t/* float:left; */\n");
      out.write("\twidth:60%;\n");
      out.write("        margin-left:auto;\n");
      out.write("        margin-right:auto;\n");
      out.write("\tbackground:#efefef;\n");
      out.write("\tline-height:normal;\n");
      out.write("\tborder-bottom:1px solid #666;\n");
      out.write("    /* padding: 10px 0px 25px 0px; */\n");
      out.write("    font-size: 14px;\n");
      out.write("    font-style: normal;\n");
      out.write("\t}\n");
      out.write("#menu ul {\n");
      out.write("\tmargin:0;\n");
      out.write("\t/* padding:10px 10px 0 50px; */\n");
      out.write("\tlist-style:none;\n");
      out.write("\t}\n");
      out.write("#menu li {\n");
      out.write("\tdisplay:inline;\n");
      out.write("\tmargin:0;\n");
      out.write("\tpadding:0;\n");
      out.write("\t}\n");
      out.write("/*\n");
      out.write("#menu a {\n");
      out.write("\tfloat:left;\n");
      out.write("\tbackground:url(\"../images/tableftF.gif\") no-repeat left top;\n");
      out.write("\tmargin:0;\n");
      out.write("\tpadding:0 0 0 4px;\n");
      out.write("\ttext-decoration:none;\n");
      out.write("\t}\n");
      out.write("#menu a span {\n");
      out.write("\tfloat:left;\n");
      out.write("\tdisplay:block;\n");
      out.write("\tbackground:url(\"../images/tabrightF.gif\") no-repeat right top;\n");
      out.write("\t/* padding:5px 15px 4px 6px;*/\n");
      out.write("\tcolor:#666;\n");
      out.write("\t}\n");
      out.write("*/\n");
      out.write("\t\n");
      out.write("/* Commented Backslash Hack hides rule from IE5-Mac \\*/\n");
      out.write("#menu a span {float:none;}\n");
      out.write("/* End IE5-Mac hack */\n");
      out.write("#menu a:hover span {color:#FFFFFF;}\n");
      out.write("#menu a:hover {background-position:0% -42px;}\n");
      out.write("#menu a:hover span {background-position:100% -42px;}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("    $(document).ready( function() {\n");
      out.write("            document.getElementById(\"username\").innerHTML = user;\n");
      out.write("    });\n");
      out.write("    var user = \"");
      out.print(session.getAttribute("username") );
      out.write("\";\n");
      out.write("    </script>\n");
      out.write("<div id=\"menu\">\n");
      out.write("    <div style=\"float:left;padding-left:20px;padding-top:20px\">\n");
      out.write("        <img src=\"");
      out.print(request.getContextPath());
      out.write("/images/logo.png\" height=\"40px\" title=\"Science Portal\">\n");
      out.write("    </div>\n");
      out.write("    <div style=\"float:right;padding-right:20px;padding-top:20px\">\n");
      out.write("        <div style=\"float:left\">Logged in as&nbsp;</div>\n");
      out.write("        <div id=username style=\"font-weight:bold;float:left\"></div>&nbsp;\n");
      out.write("        <a href=");
      out.print(request.getContextPath());
      out.write("/jsp/runApplications.jsp>Jobs</a>&nbsp;\n");
      out.write("        <a href=");
      out.print(request.getContextPath());
      out.write("/jsp/applist.jsp>Settings</a>&nbsp;\n");
      out.write("        <a href=");
      out.print(request.getContextPath());
      out.write("/jsp/logout.jsp>Logout</a>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("<div style=\"clear:both\"></div>\n");
      out.write("\n");
      out.write("      <div style=\"width:60%;margin-left:auto;margin-right:auto;padding:0px 20px;\">\n");
      out.write("         <div id=\"buttonset\" class=\"buttons\" style=\"float:left\">\n");
      out.write("            <input type=\"radio\" id=\"command-line-radio\" onClick=\"setMode('commandline')\" checked=\"checked\"/><label for=\"command-line-radio\">Command Line</label>\n");
      out.write("            <input type=\"radio\" id=\"swift-radio\" onClick=\"setMode('swift')\" /><label for=\"swift-radio\">Swift</label>\n");
      out.write("\n");
      out.write("         </div>\n");
      out.write("         <div class=\"buttons\" style=\"float:right\">\n");
      out.write("            <button onClick=help()>Help</button>\n");
      out.write("            <button onClick=showAndPreviewApplication()>Preview</button>\n");
      out.write("            <button onClick=checkAndCreateApplication()>Submit</button>\n");
      out.write("         </div>\n");
      out.write("         <div style=\"clear:both\"></div>\n");
      out.write("      <br>\n");
      out.write("\n");
      out.write("        \n");
      out.write("        <div class=\"ui-widget ui-clearfix\">\n");
      out.write("            <div class=\"margin-fix ui-widget-header ui-corner-top ui-helper-clearfix\" style=\"padding:0.3em 0.2em 0.2em 0.3em;\">\n");
      out.write("                Application Info\n");
      out.write("            </div>\n");
      out.write("            <div class=\"margin-fix ui-widget-content\">\n");
      out.write("            <fieldlabel>Name of the application</fieldlabel><input id=\"application-name\" class=\"parameter ui-widget-content ui-corner-all\" type=\"text\" onkeyup=\"applicationNameUpdate(this.value,event)\">\n");
      out.write("            <div style=\"clear:both\"></div>\n");
      out.write("            <div style=\"display:none\"><fieldlabel>Description</fieldlabel><input id=\"application-description\" class=\"parameter ui-widget-content ui-corner-all\" size=40 type=\"text\" onkeyup=\"applicationDescriptionUpdate()\"></div>\n");
      out.write("            <div style=\"clear:both\"></div>\n");
      out.write("            <div id=\"application-command-container\"><fieldlabel>Executable Name</fieldlabel><input id=\"application-command\" class=\"parameter ui-widget-content ui-corner-all\" type=\"text\"></div>\n");
      out.write("            <div style=\"clear:both;padding:5px;\"></div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("        <br /> \n");
      out.write("        \n");
      out.write("        <div id=\"command-line-container\" class=\"ui-widget ui-clearfix\">\n");
      out.write("            <div class=\"margin-fix ui-widget-header ui-corner-top ui-helper-clearfix\" style=\"padding:0.3em 0.2em 0.2em 0.3em;\">\n");
      out.write("                Application Command Line\n");
      out.write("            </div>\n");
      out.write("            <div class=\"margin-fix ui-widget-content\">\n");
      out.write("            <div id=\"commandlineblock\" style=\"display:hidden\">\n");
      out.write("            <fieldlabel>Type the command line just as you would execute it in a shell to have it parsed into the table below.</fieldlabel>\n");
      out.write("            <p>\n");
      out.write("            <input class=\"parameter ui-widget-content ui-corner-all\" style=\"width:85%\" id='cmdline' type=text onkeydown=\"if (event.keyCode == 13) { handleCommandLine() } \" size=50 value=\"app -a 1 -b 2 --longarg='longarg' --longarg2\">\n");
      out.write("            <button onClick=\"handleCommandLine()\">OK</button>\n");
      out.write("            </div>\n");
      out.write("            </div>\n");
      out.write("        <br /> \n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("        <div id=\"files\" class=\"margin-fix buttons ui-widget\">\n");
      out.write("            <div class=\"ui-widget-header ui-corner-top ui-jqgrid-titlebar\" style=\"padding-right:10px;\">\n");
      out.write("                Application Files\n");
      out.write("\n");
      out.write("                <div id=\"flashUI1\" style=\"float:right\">\n");
      out.write("                     <div style=\"padding-left: 0px;\">\n");
      out.write("                       <span id=\"spanButtonPlaceholder1\">Upload</span>\n");
      out.write("                      <input id=\"btnCancel1\" type=\"button\" value=\"Cancel Uploads\" onclick=\"cancelQueue(upload1);\" \n");
      out.write("                             disabled=\"disabled\" style=\"margin-left: 2px; height: 35px; font-size: 8pt; display:none\" />\n");
      out.write("                     </div>\n");
      out.write("                </div>\n");
      out.write("\n");
      out.write("                <div style=\"clear:both\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div id='filelist' class=\"ui-widget-content\">\n");
      out.write("                 <div id=\"fsUploadProgress1\">\n");
      out.write("                     <!-- <span class=\"legend\"></span> -->\n");
      out.write("                 </div>\n");
      out.write("                 <div id='filelist_placeholder'>No files yet</div>\n");
      out.write("                 <div style=\"clear:both\"></div>\n");
      out.write("            </div>\n");
      out.write("        <br />\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("        \n");
      out.write("        <!-- application parameters table definition -->\n");
      out.write("        <table id=\"rowed3\"></table> \n");
      out.write("        <div id=\"prowed3\"></div>\n");
      out.write("        <br/> \n");
      out.write("\n");
      out.write(" \n");
      out.write("        <div id=\"preview-container\" style=\"float:left;width:auto;display:none\">\n");
      out.write("           <div id=\"preview-container-child\" class=\"margin-fix buttons ui-widget\">\n");
      out.write("              <div class=\"ui-widget-header ui-corner-top\" style=\"width:400px;padding:0.3em 0.2em 0.2em 0.3em;\">\n");
      out.write("                  Application Preview\n");
      out.write("              </div>\n");
      out.write("              <div class=\"ui-widget-content\" style=\"width:400px\">\n");
      out.write("              <div class=\"ui-widget\" style=\"margin-left:25px;margin-right:25px;margin-top:30px;width:auto\">\n");
      out.write("              <div class=\"ui-widget\" style=\"margin:25px 25px;width:auto\">\n");
      out.write("                  <div id=\"preview-application-name\" class=\"ui-widget-header\" style=\"display:none\"></div>\n");
      out.write("                  <div class=\"ui-widget-content\">\n");
      out.write("                  <div style=\"display:none\"><div id=\"hack-preview-application-description\"></div></div>\n");
      out.write("                  <div id=\"preview\">\n");
      out.write("  \n");
      out.write("                     <div style=\"height:300px\">Not generated yet</div>\n");
      out.write("  \n");
      out.write("                  </div>\n");
      out.write("                  <div style=\"clear:both\"></div>\n");
      out.write("                  </div>\n");
      out.write("                  <div style=\"clear:both\"></div>\n");
      out.write("                  </div>\n");
      out.write("              </div>\n");
      out.write("          </div>\n");
      out.write("          <br /> \n");
      out.write("        </div>\n");
      out.write("     </div>\n");
      out.write("\n");
      out.write("      </div>\n");
      out.write("        <!-- dialog content starts here -->\n");
      out.write("        \n");
      out.write("        <!-- notification -->\n");
      out.write("        <div id=\"notification\" style=\"font-size:12px;display:none; position: absolute; width: 70%; margin-left:auto;margin-right:auto;height: 50px; top: 0px; line-height:2em;padding:10px\" class=\"ui-widget ui-widget-content ui-state-highlight\">\n");
      out.write("\t    <div style=\"float:right\"><a href=javascript:hideNotification()>Close</a> </div>\n");
      out.write("        <div id=\"msg\" style=\"float:left\"></div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div id=\"dialog-confirm\" title=\"Delete this item?\" style=\"display:none\">\n");
      out.write("            <p><span class=\"ui-icon ui-icon-alert\" style=\"float:left; margin:0 7px 20px 0;\"></span>This item will be permanently deleted and cannot be recovered. Are you sure?</p>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- command line dialog -->\n");
      out.write("        <div id=\"commandLineDialog\" title=\"Dialog Title\" style='display:none'>\n");
      out.write("            <div class=\"bd\">\n");
      out.write("            <div id=\"commandlineblock\" style=\"display:hidden\">\n");
      out.write("            Type the command line just as you would execute it in a shell to have it parsed into the table below.\n");
      out.write("            <p>\n");
      out.write("            <input id='cmdline' type=text onkeydown=\"if (event.keyCode == 13) { handleCommandLine() } \" size=50 value=\"app -a 1 -b 2 --longarg='longarg' --longarg2\">\n");
      out.write("            <input type='submit' value='OK' onClick=\"handleCommandLine()\">\n");
      out.write("            </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <!-- upload dialog -->\n");
      out.write("        <div id=\"uploadDialog\" class=\"ui-widget\" style='display:none'>\n");
      out.write("            <div class=\"bd\">\n");
      out.write("            Upload a Swift script and other supporting files. They'll appear in the \"Application Files\" box below.\n");
      out.write("            <div id=\"upload_span_container\">\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("              <input id=\"btnCancel1\" type=\"button\" value=\"Cancel Uploads\" onclick=\"cancelQueue(upload1);\" disabled=\"disabled          \n");
      out.write("             </div>\n");
      out.write("          </div>\n");
      out.write("        </div>\n");
      out.write("        \n");
      out.write("\n");
      out.write("        \n");
      out.write("\n");
      out.write("\t</body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
      }
    } finally {
      if (_jspxFactory != null) _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
